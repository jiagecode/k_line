<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.line.backstage.dao.mapper.AccountInfoMapper">
 
    <resultMap type="com.line.backstage.entity.AccountInfo" id="AccountInfoMap">
        <result property="accountId" column="ACCOUNT_ID" jdbcType="INTEGER"/>
        <result property="userId" column="USER_ID" jdbcType="INTEGER"/>
        <result property="accountMoney" column="ACCOUNT_MONEY" jdbcType="NUMERIC"/>
        <result property="accountStatus" column="ACCOUNT_STATUS" jdbcType="INTEGER"/>
        <result property="addDate" column="ADD_DATE" jdbcType="TIMESTAMP"/>
        <result property="editDate" column="EDIT_DATE" jdbcType="TIMESTAMP"/>
        <result property="addUserId" column="ADD_USER_ID" jdbcType="INTEGER"/>
        <result property="editUserId" column="EDIT_USER_ID" jdbcType="INTEGER"/>
        <result property="del" column="DEL" jdbcType="INTEGER"/>
        <result property="orderNum" column="ORDER_NUM" jdbcType="INTEGER"/>
        <result property="allMoney" column="ALL_MONEY" jdbcType="NUMERIC"/>
        <result property="allInMoney" column="ALL_IN_MONEY" jdbcType="NUMERIC"/>
        <result property="allInNum" column="ALL_IN_NUM" jdbcType="INTEGER"/>
        <result property="handInMoney" column="HAND_IN_MONEY" jdbcType="NUMERIC"/>
        <result property="allOutMoney" column="ALL_OUT_MONEY" jdbcType="NUMERIC"/>
        <result property="allOutNum" column="ALL_OUT_NUM" jdbcType="INTEGER"/>
        <result property="allCommission" column="ALL_COMMISSION" jdbcType="NUMERIC"/>
        <result property="allBonus" column="ALL_BONUS" jdbcType="NUMERIC"/>
        <result property="reallyMoney" column="REALLY_MONEY" jdbcType="NUMERIC"/>
        <result property="reallyInMoney" column="REALLY_IN_MONEY" jdbcType="NUMERIC"/>
        <result property="allFee" column="ALL_FEE" jdbcType="NUMERIC"/>
        <result property="remarks" column="REMARKS" jdbcType="VARCHAR"/>

        <result property="agentName" column="AGENT_NAME" jdbcType="VARCHAR"/>
        <result property="userRealName" column="USER_REAL_NAME" jdbcType="VARCHAR"/>
        <result property="todayMoney" column="TODAY_MONEY" jdbcType="NUMERIC"/>
        <result property="allCheckMoney" column="ALL_CHECK_MONEY" jdbcType="NUMERIC"/>
    </resultMap>
    <sql id="account_info_sql">
        a.ACCOUNT_ID,a.USER_ID,a.ACCOUNT_MONEY,a.ACCOUNT_STATUS,a.ADD_DATE,a.EDIT_DATE,a.ADD_USER_ID,a.EDIT_USER_ID,
        a.DEL,a.ORDER_NUM,a.ALL_MONEY,a.ALL_IN_MONEY,a.ALL_IN_NUM,a.HAND_IN_MONEY,a.ALL_OUT_MONEY,a.ALL_OUT_NUM,
        a.ALL_COMMISSION,a.ALL_BONUS,a.REALLY_MONEY,a.REALLY_IN_MONEY,a.ALL_FEE,a.REMARKS,u.AGENT_NAME,u.USER_REAL_NAME,
        co.ALL_CHECK_MONEY
    </sql>
    <select id="queryMyAccountIdByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select ACCOUNT_ID from  t_account_info where  DEL = 1 and USER_ID = #{userId}
    </select>
    <select id="queryMyMoneyByUserId" parameterType="java.lang.Integer" resultType="java.lang.Double">
        select ACCOUNT_MONEY from  t_account_info where  DEL = 1 and USER_ID = #{userId}
    </select>
    <select id="sumAllUserMoney" resultType="java.lang.Double">
        select sum(ACCOUNT_MONEY) from  t_account_info where  DEL = 1
    </select>
    <select id="sumAllUserProfitAndLoss" resultType="java.lang.Double">
        select sum(ALL_MONEY) from  t_account_info where  DEL = 1
    </select>
    <select id="queryForPage" parameterType="com.line.backstage.entity.AccountInfo" resultMap="AccountInfoMap">
        select <include refid="account_info_sql"/>
        from t_account_info a
        left join t_user_info u on a.USER_ID = u.USER_ID
        left join (SELECT sum(EXP_MONEY) TODAY_MONEY,USER_ID FROM t_order_expand WHERE TODAY_NUM = #{todayNum} and DEL = 1 GROUP BY USER_ID ) as ext
        on ext.USER_ID = a.USER_ID
        left join (SELECT sum(CASH_MONEY) ALL_CHECK_MONEY,ACCOUNT_ID FROM t_cash_out_in WHERE CHECK_STATUS = 2 and DEL = 1 GROUP BY ACCOUNT_ID ) as co
        on co.ACCOUNT_ID = a.ACCOUNT_ID
        where a.DEL = #{del}
        <if test="userRealName != null and userRealName != ''">
            and (u.USER_PHONE like concat('%', #{userRealName}, '%')
            or u.USER_NICK_NAME like concat('%', #{userRealName}, '%')
            or u.USER_REAL_NAME like concat('%', #{userRealName}, '%')
            )
        </if>
        <if test=" beginDate != null ">
            and a.ADD_DATE <![CDATA[ >= ]]> #{beginDate}
        </if>
        <if test=" endDate != null ">
            and a.ADD_DATE <![CDATA[ <= ]]> #{endDate}
        </if>
    </select>
    <select id="queryManMoneyVo" parameterType="com.line.backstage.entity.sysentity.ManMoneyVo" resultType="com.line.backstage.entity.sysentity.ManMoneyVo">
        SELECT  SUM(a.ALL_IN_MONEY) allInMoney,
                SUM(a.ALL_OUT_MONEY) allOutMoney,
                SUM(a.ALL_COMMISSION) allCommission,
                SUM(a.ALL_BONUS) allBonus ,
                SUM(a.ALL_MONEY) allMoney,
                SUM(ext.TODAY_MONEY) todayMoney
        FROM t_account_info a
        left join t_user_info u on a.USER_ID = u.USER_ID
        left join (SELECT sum(EXP_MONEY) TODAY_MONEY,USER_ID FROM t_order_expand WHERE TODAY_NUM = #{todayNum} and DEL = 1 GROUP BY USER_ID ) as ext
        on ext.USER_ID = a.USER_ID
        WHERE a.DEL = #{del}
        <if test="userRealName != null and userRealName != ''">
            and (u.USER_PHONE like concat('%', #{userRealName}, '%')
            or u.USER_NICK_NAME like concat('%', #{userRealName}, '%')
            or u.USER_REAL_NAME like concat('%', #{userRealName}, '%')
            )
        </if>
        <if test=" beginDate != null ">
            and a.ADD_DATE <![CDATA[ >= ]]> #{beginDate}
        </if>
        <if test=" endDate != null ">
            and a.ADD_DATE <![CDATA[ <= ]]> #{endDate}
        </if>
    </select>
</mapper>